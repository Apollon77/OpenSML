
const sml = require('../index')

var testData = new Bufferhex')

function runTest(testData) {
    var smlFile = new sml.SmlFile();

    // STEP 1: Parse SML Telegram
    try {
        smlFile.parse(testData);
    } catch (err) {
        console.log(smlFile.toString());
        throw err;
    }

    // Output Message
    var parsedFirst = smlFile.toString();
    console.log(parsedFirst);
}

runTest(testData);